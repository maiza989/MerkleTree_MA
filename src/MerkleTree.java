/**
 * 
 * This class takes in datablocks generated from DataReader and hashes the information in them before
 * adding them to a binary search Merkle Tree
 * 
 * @author Maitham Alghamgham
 * @version 12/2/19
 * 
 * 
 * CS 215 Programming Project 4
 * Fall 2019
 * 
 */

import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

import TreePackage.*;

public class MerkleTree  {
	
	BinarySearchTree bTree = new BinarySearchTree();
	
	
	public MerkleTree() {
		
	}// end contructor
	
	
	/**
	 * 
	 * This method takes in a DataBlock and uses MessageDigest to create a byte array based on the hash
	 * 
	 * @param input - the data block of information from the input file
	 * @return - returns a byte array converted into a hexadecimal string by toHexString
	 * @throws NoSuchAlgorithmException
	 */
		private static byte[] getSHA(DataBlock input) throws NoSuchAlgorithmException{  
	        
	        MessageDigest md = MessageDigest.getInstance("SHA-256");  
	  
	        return md.digest(input.getData().getBytes(StandardCharsets.UTF_8)); 
	        
	    }// end getSHA 
	    
		/**
		 * 
		 * This method takes in a byte array from the getSHA method and outputs a string that is the hexadecimal of the hash
		 * 
		 * @param hash - the byte array generated by getSHA
		 * @return - the string that is the hash for the data in the datablocks
		 */
	    private static String toHexString(byte[] hash){ 
	    	
	        BigInteger number = new BigInteger(1, hash);  
	  
	       
	        StringBuilder hexString = new StringBuilder(number.toString(16));  
	  
	        
	        while (hexString.length() < 32){  
	            hexString.insert(0, '0');  
	        } // end while loop 
	  
	        return hexString.toString();  
	    } // end toHexString
	
	/**
	 * 
	 * This method takes the DataBlocks created by the DataReader and hashes the data, adding the hash to
	 * the tree
	 * 
	 * @param data - the datablock generated by datareader
	 * @return - returns the hash to ensure that the method is working
	 * @throws NoSuchAlgorithmException
	 */
	@SuppressWarnings("unchecked")
	public String hashNode(DataBlock data) throws NoSuchAlgorithmException {
		
		String hash;
		
		hash = toHexString(getSHA(data));
		
		bTree.add(hash);
		
		return hash;
		
	}// end hashNode

}// end MerkleTree
